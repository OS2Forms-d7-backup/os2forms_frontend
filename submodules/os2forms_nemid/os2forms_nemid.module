<?php

module_load_include('inc', 'os2forms_nemid', 'includes/os2forms_nemid.utils');

/**
 * Implements hook_form_alter().
 *
 * Adds settings NemID settings to webform.
 * Handles fields showing depending on the form type.
 *
 * @see os2form_nemid_handle_field_visiblity.
 */
function os2forms_nemid_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'os2forms_settings_form') {
    // Adding NemID related setting to webform.

    $nid = $form['#webform_nid'];
    $settings = os2forms_frontend_webform_get_setting($nid, 'os2forms_nemid');

    $form['os2forms_nemid_fs'] = array(
      '#type' => 'fieldset',
      '#title' => t('OS2Forms NemID settings'),
      '#collapsible' => TRUE,
      '#collapsed' => TRUE,
    );

    // Using constants from nemid module.
    $webform_types = array(
      NEMID_WEBFORM_COMPONENT_TYPE_PERSONAL => t('Personal'),
      NEMID_WEBFORM_COMPONENT_TYPE_COMPANY => t('Company'),
    );

    $form['os2forms_nemid_fs']['os2form_nemid_webform_type'] = array(
      '#type' => 'select',
      '#title' => t('NemID form type'),
      '#default_value' => !empty($settings) ? $settings['webform_type'] : NULL,
      '#empty_option' => t('Not specified'),
      '#options' => $webform_types,
      '#description' => t('Based on the selected type form irrelevant fields will not be shown to the end used'),
    );

    $form['#submit'][] = 'os2forms_nemid_form_submit';
  }
  elseif (strstr($form_id, 'webform_client_form')) {
    $form = os2form_nemid_handle_field_visiblity($form);
  }
}

/**
 * Implements hook_webform_component_info().
 */
function os2forms_nemid_webform_component_info() {
  $components = array();
  $components['nemid_link'] = array(
    'label' => t('NemID link'),
    'description' => t('Create NemID link button.'),
    'features' => array(
      'required' => FALSE,
      'group' => FALSE,
      'title_display' => FALSE,
      'title_inline' => FALSE,
      'display' => FALSE,
      'private' => FALSE,
      'description' => FALSE,
      'disabled' => FALSE,
      'spam_analysis' => FALSE,
      'attachment' => FALSE,
    ),
    'file' => 'components/nemid_link.inc',
  );
  return $components;
}

/**
 * Implements hook_webform_component_update().
 */
function os2forms_nemid_webform_component_update($component) {
  if ($component['type'] == 'nemid_link') {
    $nid = $component['nid'];
    variable_set('nemlogin_link_enable_' . $nid, 1);
    variable_set('nemlogin_link_auto_redirect_' . $nid, $component['extra']['nemid_link_auto_redirect']);
  }
}

/**
 * Implements hook_webform_component_insert().
 */
function os2forms_nemid_webform_component_insert($component) {
  if ($component['type'] == 'nemid_link') {
    $nid = $component['nid'];
    variable_set('nemlogin_link_enable_' . $nid, 1);
    variable_set('nemlogin_link_auto_redirect_' . $nid, $component['extra']['nemid_link_auto_redirect']);
  }
}